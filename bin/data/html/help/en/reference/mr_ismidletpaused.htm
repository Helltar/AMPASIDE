<html>
<head>
<title>MIDletPascal 3.0 Documentation</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<style type="text/css">
<!--
body,td,th {
	font-family: Arial, Helvetica, sans-serif;
	font-size: 12px;
	color: #333399;
}
body {
	background-color: #FFFFFF;
}
a:link {
	color: #333399;
}
a:visited {
	color: #333399;
}
a:hover {
	color: #666666;
}
a:active {
	color: #333399;
}
-->
</style></head>

<body>
<p><font size=+2>isMidletPaused</font></p>
<table width="100%"  border="0">
  <tr>
    <td height="3" bgcolor="#EEEE00"></td>
  </tr>
</table><br>

<code>function isMidletPaused: boolean;</code>

<p>Returns true if the MIDlet is in the paused state, otherwise false. </p>

<p>When the MIDlet is started, it is not in the paused state. The MIDlet can enter paused state when, for example, the phone receives incoming call. Then the MIDlet enters paused state, the call is answered, and after the phone call the user may resume the MIDlet - after resuming the MIDlet is not in the paused state any more.</p>

<p>Determining if the MIDlet is in the paused state may be useful in different applications. Consider, for example, a game that must be paused when the MIDlet is paused. The following code would do the trick:</p>

<pre>
  ...
  repeat
    { process keypad inputs and read the timer }

    { if the MIDlet is paused, wait until it is resumed }
    while isMidletPaused do
    begin
      delay(100);
    end; 

  until gameOver;
  ...
</pre>

<p>See also: <a href="mr_getkeycode.htm">getKeyCode</a>, <a href="mr_getrelativetimems.htm">getRelativeTimeMs</a>, <a href="mr_halt.htm">halt</a></p>
</body>
</html>
