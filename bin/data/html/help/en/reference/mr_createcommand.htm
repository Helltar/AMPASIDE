<html>
<head>
<title>MIDletPascal 3.0 Documentation</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<style type="text/css">
<!--
body,td,th {
	font-family: Arial, Helvetica, sans-serif;
	font-size: 12px;
	color: #333399;
}
body {
	background-color: #FFFFFF;
}
a:link {
	color: #333399;
}
a:visited {
	color: #333399;
}
a:hover {
	color: #666666;
}
a:active {
	color: #333399;
}
-->
</style></head>

<body>
<p><font size=+2>createCommand</font></p>
<table width="100%"  border="0">
  <tr>
    <td height="3" bgcolor="#EEEE00"></td>
  </tr>
</table><br>

<code>function createCommand(label:string; commandType:integer; priority:integer): command;</code>

<p>Creates the command element with the label 'label'. The label should be as short as possible.
The priority of the command is set with the 'priority' parameter; the lower value means higher priority. 
The application uses the 'commandType' to specify the intent of this command. For example, if the application 
specifies that the command is of type CM_BACK, and if the device has a standard of placing the "back" 
operation on a certain soft-button, the implementation can follow the style of the device by using the semantic 
information as a guide. 'commandType' can be any of the following:</p>
<ul>
  <li>CM_SCREEN - any command type</li>
  <li>CM_BACK</li>
  <li>CM_CANCEL</li>
  <li>CM_OK</li>
  <li>CM_HELP</li>
  <li>CM_STOP</li>
  <li>CM_EXIT</li>
  <li>CM_ITEM</li>
</ul>

<pre>
  var exitCmd, pauseCmd: command;
  begin
    exitCmd := createCommand('Exit', CM_EXIT, 1);
    pauseCmd := createCommand('Pause', CM_SCREEN, 1);
    addCommand(exitCmd);
    addCommand(pauseCmd);
  end.
</pre>

<p>See also: <a href="mr_getclickedcommand.htm">getClickedCommand</a>,
<a href="mr_addcommand.htm">addCommand</a>,
<a href="mr_removecommand.htm">removeCommand</a></p>
</body>
</html>
